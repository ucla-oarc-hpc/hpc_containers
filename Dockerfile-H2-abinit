# Base image
FROM docker.io/rockylinux:9.3

# Install packages and set up oneAPI repository
RUN echo -e "[oneAPI]\nname=IntelÂ® oneAPI repository\nbaseurl=https://yum.repos.intel.com/oneapi\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB" > /etc/yum.repos.d/oneAPI.repo && \
    dnf -y update && \
    dnf install -y blas lapack libcurl-devel zlib-devel procps-ng cmake pkgconfig gcc gcc-gfortran gcc-c++ make wget libxml2-devel unzip gmp-devel mpfr-devel libmpc-devel openssl-devel && \
    dnf groupinstall -y "Development Tools" && \
    dnf install intel-basekit-2024.1 intel-hpckit-2024.1 -y && \
    dnf clean all

source /opt/intel/oneapi/setvars.sh

# Build HDF5 libraries
RUN git clone https://github.com/HDFGroup/hdf5 \
 && cd hdf5 \
 && git checkout hdf5-1_14_3 \
 && ./configure --enable-fortran --enable-cxx --prefix=/usr/local/ \
 && make ; make install \
 && cd / ; rm -rf /hdf5
ENV LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}

## Build netCDF    
RUN curl -L -O https://downloads.unidata.ucar.edu/netcdf-c/4.9.2/netcdf-c-4.9.2.tar.gz \
    && curl -L -O https://downloads.unidata.ucar.edu/netcdf-fortran/4.6.1/netcdf-fortran-4.6.1.tar.gz \
    && tar -vxf netcdf-c-4.9.2.tar.gz \
    && cd netcdf-c-4.9.2 \
    && ./configure \
 && make ; make install \
 && cd / ; tar -xf netcdf-fortran-4.6.1.tar.gz \
 && cd netcdf-fortran-4.6.1/ \
 && ./configure \
 && make ; make install \
 && cd / ; rm -rf rm -rf netcdf-*

## INstall libxc
RUN curl -L -O https://gitlab.com/libxc/libxc/-/archive/7.0.0/libxc-7.0.0.tar.bz2 \
    && tar -vxf libxc-7.0.0.tar.bz2 \
    && cd libxc-7.0.0 \
    && autoreconf -i ; ./configure --enable-kxc \
    && make ; make install \ 
    && cd / ; rm -rf libxc*

## Build ABINIT

RUN curl -L -O https://forge.abinit.org/abinit-10.2.5.tar.gz \
    && tar -vxf abinit-10.2.5.tar.gz  \
    && cd abinit-10.2.4.84-9554b-dirty \
    && FC=mpiifx CC=mpiicx CXX=mpiicpx ./configure ; make ; make install \ 
    && cd / ; rm 


